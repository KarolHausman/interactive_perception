#!/usr/bin/env python
PACKAGE = "plugin_manager"

import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()



gen.add("cloud_name", str_t, 0, "Enter the name of an input cloud", "../../cloud_test.pcd")


size_enum = gen.enum([ gen.const("INIT", int_t, 0, "Init mode"),
                  gen.const("ALL", int_t, 1, "Estimating the push point"),
                  gen.const("PUSH_POINT", int_t, 2, "Estimating the push point"),
                  gen.const("STATIC_SEGMENTATION", int_t, 3, "Static segmentation") ],
                  "Selected mode")

gen.add("manager_mode", int_t, 0, "A mode that the program is in", 1, 0, 3, edit_method=size_enum)


size_enum = gen.enum([ gen.const("PUSH_POINT_HAUSMAN", int_t, 0, "PUSH_POINT_HAUSMAN"),
                  gen.const("PUSH_POINT_IMPL2", int_t, 1, "PUSH_POINT_IMPL2"),
                  gen.const("PUSH_POINT_IMPL3", int_t, 2, "PUSH_POINT_IMPL3") ],
                  "Selected mode")

gen.add("push_point_mode", int_t, 0, "A push point mode is: ", 1, 0, 2, edit_method=size_enum)

size_enum = gen.enum([ gen.const("STATIC_SEGMENTATION_HAUSMAN", int_t, 0, "STATIC_SEGMENTATION_HAUSMAN"),
                  gen.const("STATIC_SEGMENTATION_IMPL2", int_t, 1, "STATIC_SEGMENTATION_IMPL2"),
                  gen.const("STATIC_SEGMENTATION_IMPL3", int_t, 2, "STATIC_SEGMENTATION_IMPL3") ],
                  "Selected mode")

gen.add("static_segmentation_mode", int_t, 0, "A static segmentation mode is: ", 1, 0, 2, edit_method=size_enum)




exit(gen.generate(PACKAGE, "plugin_manager", "PluginManager"))
